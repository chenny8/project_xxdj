<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>layui</title>
    <meta name="renderer" content="webkit">
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">
    <link rel="stylesheet" href="../../lib/layui-v2.5.5/css/layui.css" media="all">
    <link rel="stylesheet" href="../../css/public.css" media="all">
    <style>
        body {
            background-color: #ffffff;
        }

        .layui-form-select dl {
            z-index: 99999;
        }
    </style>
</head>
<body>

<div class="layui-form layuimini-form" lay-filter="formId">
    <div class="layui-form-item">
        <input type="hidden" name="id">
        <label class="layui-form-label required">所属栏目</label>
        <div class="layui-input-block ">
            <select name="section" lay-filter="section" lay-verify="required">
                <option value=""></option>
                <option value="1">主题党日</option>
                <option value="2">党员学习</option>
                <option value="3">党建概况</option>
                <option value="4">通知公告</option>
            </select>
        </div>
    </div>
    <div class="layui-form-item">
        <label class="layui-form-label required">标题</label>
        <div class="layui-input-block">
            <input type="text" name="title" lay-verify="required" lay-reqtext="标题不能为空" placeholder="请输入标题名称"
                   value=""
                   class="layui-input">
        </div>
    </div>
    <div class="layui-form-item">
        <label class="layui-form-label required">作者</label>
        <div class="layui-input-block">
            <input type="text" name="author" lay-verify="required" lay-reqtext="作者不能为空" placeholder="请输入作者" value=""
                   class="layui-input">
        </div>
    </div>
    <div class="layui-form-item">
        <label class="layui-form-label required">正文编辑</label>
        <div class="layui-input-block">
            <div id="editor" style="margin: 50px 0 50px 0">
            </div>
            <textarea style="display: none"  name="content" id="content"></textarea>
        </div>
    </div>

    <div class="layui-form-item layui-form-text">
        <label class="layui-form-label">备注信息</label>
        <div class="layui-input-block">
            <textarea name="memo" class="layui-textarea" placeholder="请输入备注信息"></textarea>
        </div>
    </div>


    <div class="layui-form-item">
        <div class="layui-input-block">
            <button class="layui-btn layui-btn-normal" lay-submit lay-filter="saveBtn">确认保存</button>
        </div>
    </div>

</div>

<script src="../../lib/layui-v2.5.5/layui.js" charset="utf-8"></script>
<script src="../..//js/lay-config.js?v=1.0.4" charset="utf-8"></script>
<script>
    layui.use(['form', 'laydate', 'wangEditor'], function () {
        let form = layui.form,
            layer = layui.layer,
            laydate = layui.laydate,
            wangEditor = layui.wangEditor,
            $ = layui.$;
        //日期
        laydate.render({
            elem: '#bussiness_time'
        });


        //表单填充内容
        let editData = JSON.parse(JSON.stringify(parent.window.articleEditData));

        //编辑器
        let E = window.wangEditor
        let editor = new E('#editor')
        //使用base64编码存储图片
        // editor.customConfig.uploadImgShowBase64 = true
        editor.customConfig.uploadImgServer = '/article/upload'
        //配置文件参数名（这个参数必需配置，后台用这个值接收图片）
        editor.customConfig.uploadFileName = 'mypic'
        //设置上传图片的header
        editor.customConfig.uploadImgHeaders = {
            'authorization': 'Bearer ' + localStorage.token,
            'enctype': 'multipart/form-data'
        }
        //监听函数在上传图片的不同阶段做相应处理
        editor.customConfig.uploadImgHooks = {
            success: function (xhr, editor, result) {
                console.log('图片上传并返回结果,图片插入成功')
            },
            fail: function (xhr, editor, result) {
                console.log('图片上传并返回结果，但图片插入错误')
            },
            error: function (xhr, editor) {
                console.log('图片上传出错')
            },
            timeout: function (xhr, editor) {
                console.log('图片上传超时')
            },
            customInsert: function (insertImg, result, editor) {
                // 上传成功 result为后台处理函数返回的数据
                let url
                for (let i = 0; i < result.data.length; i++) {
                    url = result.data[i].imgPath
                    //根据返回的图片路径，将图片插入到页面中，回显
                    insertImg(url)
                }

            }
        }
        //内容写如隐藏控件
        editor.customConfig.onchange = function (html) {
            $("#content").val(html);
        }

        editor.create();


        //监听提交
        form.on('submit(saveBtn)', function (data) {
            layer.confirm('确认提交？', {btn: ['确定', '取消'], title: "提示"}, function (index) {
                $.ajax({
                    type: "post",
                    url: '/article/edit',
                    data: data.field,
                    dataType: "json",
                    async: true,
                    success: function (data) {
                        if (data.code == 0) {
                            layer.msg('操作成功', {icon: 1, time: 1000}, function () {
                                parent.layer.closeAll();
                            });
                            parent.layui.table.reload('currentTableId');

                        } else {
                            layer.msg(data.msg, {icon: 2});
                        }
                    }
                });
            });
            return false;
        });

        /**
         * 初始化表单，要加上，不然刷新部分组件可能会不加载
         */
        form.render();


        form.val('formId', editData);
        editor.txt.html(editData.content);
        console.log(editData);

    });
</script>
</body>
</html>